<%# tag definitions for the hobo_carrierwave plugin %>

<!--
Defines a specialized default input tag for model fields of type :carierwave_attachment.  By default, unless an uploader is specified, these will have a field data type of HoboCarrierwave::DefaultUploader.

### Caveats

In any form where you expect to have a field of type HoboCarrierwave::*Uploader (:carrierwave_attachment), be sure to add the multipart attribute to the form
heading.

The easiest way to do this is by extending the form with and extend tag like so:

If you have a model called Profile that contains a :carrierwave_attachment field, simply extend the form with old-form merge:

    <extend tag="form" for="Profile">
       <old-form merge multipart/>
    </extend>

See [the Hobo docs on extending tags](http://hobocentral.net/manual/dryml-guide#extending-a-tag) for further
explanation of extending existing dryml tags

-->

<def tag="remove-attachment-button">
  Remove <%= this_field %>?
  <%=
     dashed_field = this_field.gsub('_','-')
     element :input, {class: "remove-#{dashed_field}-tag remove-attachment #{dashed_field} checkbox", type: "checkbox", value: "true",  name: "#{this_parent.class.name.underscore}[remove_#{this_field}]" }, nil, true, true
   %>
</def>

<def tag="input" for="HoboCarrierwave::DefaultUploader">
   <if test="&this_parent.send(this_field + '?')">
   <view/>
   <% remove_field = 'remove_' + this_field;
     removable = this_parent.class.accessible_attributes.include?(remove_field) rescue false
   %>
   <remove-attachment-button if="&removable"/>
   <br/>Upload to change only:
   </if>
   <%= file_field_tag param_name_for_this, attributes %>
</def>

<def tag="view" for="HoboCarrierwave::DefaultUploader">
   <a href="&this.url"><%= this.url %></a>
</def>

<def tag="view" for="HoboCarrierwave::ImageUploader">
   <image src="&this.url"/>
</def>

